# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - main
  paths:
    include:
      - main.tf

pool:
  vmImage: ubuntu-latest

variables:
- group: tf-vars

steps:
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'
  displayName: Install Terraform

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'terraform-secret-conn'
    backendAzureRmResourceGroupName: 'tfstate'
    backendAzureRmStorageAccountName: 'synapsestatestorage'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'
  displayName: Terraform Init

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'validate'
  displayName: Terraform Validate

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'plan'
    commandOptions: '-var="sql_administrator_password=$(sql_administrator_password)" -var="client_id=$(client_id)" -var="client_secret=$(client_secret)" -var="tenant_id=$(tenant_id)" -var="subscription_id=$(subscription_id)" -var="user_object_id=$(user_object_id)" -input=false -lock=false'
    environmentServiceNameAzureRM: 'terraform-serv-conn'
  displayName: Terraform Plan

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: '-var="sql_administrator_password=$(sql_administrator_password)" -var="client_id=$(client_id)" -var="client_secret=$(client_secret)" -var="tenant_id=$(tenant_id)" -var="subscription_id=$(subscription_id)" -var="user_object_id=$(user_object_id)" -input=false -lock=false'
    environmentServiceNameAzureRM: 'terraform-serv-conn'
  displayName: Terraform Apply

- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'terraform-secret-conn'
    ScriptType: 'InlineScript'
    Inline: |
      Install-Module Az.Synapse -RequiredVersion 0.7.0 -Scope CurrentUser -Force -AllowClobber
      $WorkspaceName = "$(uniqueString)" + '-synapse-' + "$(envName)"
      New-AzSynapseRoleAssignment -WorkspaceName $WorkspaceName -RoleDefinitionName "Workspace Admin" -ObjectID "$(user_object_id)"
    preferredAzurePowerShellVersion: '3.1.0'
  displayName: Assign workspace permissions